{
    "scopeName": "source.codefr",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#modules"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                "name": "keyword.control.codefr",
                "match": "\\b(Variables|Variable|Constante|Tableau|Debut|Fin|Si|Alors|SinonSi|Sinon|FinSi|TantQue|Faire|FinTantQue|Pour|De|A|FinPour|Selon|Cas|FinSelon|Fonction|FinFonction|Retourner|Module|FinModule|Importer)\\b"
            },
            {
                "name": "storage.type.codefr",
                "match": "\\b(Entier|Decimal|Chaine|Logique|Caractere)\\b"
            },
            {
                "name": "constant.language.codefr",
                "match": "\\b(Vrai|Faux|Null)\\b"
            }]
        },
        "strings": {
            "name": "string.quoted.double.codefr",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.codefr",
                    "match": "\\\\."
                }
            ]
        },
        "comments": {
            "patterns": [{
                "name": "comment.line.double-slash.codefr",
                "match": "//.*$"
            },
            {
                "name": "comment.block.codefr",
                "begin": "/\\*",
                "end": "\\*/"
            }]
        },
        "numbers": {
            "patterns": [{
                "name": "constant.numeric.codefr",
                "match": "\\b([0-9]+\\.?[0-9]*|\\.[0-9]+)\\b"
            }]
        },
        "operators": {
            "patterns": [{
                "name": "keyword.operator.codefr",
                "match": "\\b(Et|Ou|Non|Oux)\\b|\\+|\\-|\\*|\\/|\\^|\\%|\\<|\\>|\\<=|\\>=|\\==|\\!=|\\="
            }]
        },
        "functions": {
            "patterns": [{
                "name": "support.function.codefr",
                "match": "\\b(Ecrire|Lire|Racine|Sin|Cos|Tan|Log|Log10|Arrondi|Abs|Alea|Exp|Puissance|Plafond|Plancher|Longueur|Concatener|Comparer|Rechercher|SousChaine|Majuscule|Minuscule|Remplacer|Inverser|Supprimer|EstNumerique|ConvertirEnNombre|ConvertirEnChaine)\\b"
            }]
        },
        "modules": {
            "patterns": [{
                "name": "entity.name.type.module.codefr",
                "match": "\\b(Module)\\s+([A-Za-z][A-Za-z0-9_]*)\\b"
            }]
        }
    }
}